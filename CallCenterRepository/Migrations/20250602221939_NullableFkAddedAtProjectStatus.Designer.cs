// <auto-generated />
using System;
using CallCenterRepository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CallCenterRepository.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250602221939_NullableFkAddedAtProjectStatus")]
    partial class NullableFkAddedAtProjectStatus
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CallCenterRepository.Models.Admin", b =>
                {
                    b.Property<int>("PkAdmin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PkAdmin"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("SelfOperatorProfile")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.HasKey("PkAdmin");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("CallCenterRepository.Models.Client", b =>
                {
                    b.Property<int>("PkClient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PkClient"));

                    b.Property<int>("FkProject")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("PkClient");

                    b.HasIndex("FkProject");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("CallCenterRepository.Models.ClientNote", b =>
                {
                    b.Property<int>("PkNote")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PkNote"));

                    b.Property<DateTime>("DateWritten")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("FkConversation")
                        .HasColumnType("integer");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("PkNote");

                    b.HasIndex("FkConversation");

                    b.ToTable("ClientNotes");
                });

            modelBuilder.Entity("CallCenterRepository.Models.Conversation", b =>
                {
                    b.Property<int>("PkTalk")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PkTalk"));

                    b.Property<int>("FkClient")
                        .HasColumnType("integer");

                    b.Property<int>("FkOperator")
                        .HasColumnType("integer");

                    b.Property<int>("FkProject")
                        .HasColumnType("integer");

                    b.Property<string>("PathToAudio")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<DateTime>("TimeEnded")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("TimeStarted")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("PkTalk");

                    b.HasIndex("FkClient");

                    b.HasIndex("FkOperator");

                    b.HasIndex("FkProject");

                    b.ToTable("Conversations");
                });

            modelBuilder.Entity("CallCenterRepository.Models.ConversationGrade", b =>
                {
                    b.Property<int>("PkGrade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PkGrade"));

                    b.Property<int>("FkConversation")
                        .HasColumnType("integer");

                    b.Property<int>("GradeType")
                        .HasColumnType("integer");

                    b.Property<int>("Score")
                        .HasColumnType("integer");

                    b.HasKey("PkGrade");

                    b.HasIndex("FkConversation");

                    b.ToTable("ConversationGrades");
                });

            modelBuilder.Entity("CallCenterRepository.Models.ConversationStatus", b =>
                {
                    b.Property<int>("FkTalk")
                        .HasColumnType("integer");

                    b.Property<int>("FkProjectStatus")
                        .HasColumnType("integer");

                    b.Property<int>("PkConversationStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PkConversationStatus"));

                    b.Property<DateTime>("SelectedTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("FkTalk", "FkProjectStatus");

                    b.HasIndex("FkProjectStatus");

                    b.ToTable("ConversationStatuses");
                });

            modelBuilder.Entity("CallCenterRepository.Models.Operator", b =>
                {
                    b.Property<int>("PkOperator")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PkOperator"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("FkAdmin")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.HasKey("PkOperator");

                    b.HasIndex("FkAdmin");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Operators");
                });

            modelBuilder.Entity("CallCenterRepository.Models.OperatorProject", b =>
                {
                    b.Property<int>("FkOperator")
                        .HasColumnType("integer");

                    b.Property<int>("FkProject")
                        .HasColumnType("integer");

                    b.Property<DateTime>("AssignedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PkOperatorProject")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PkOperatorProject"));

                    b.HasKey("FkOperator", "FkProject");

                    b.HasIndex("FkProject");

                    b.ToTable("OperatorProjects");
                });

            modelBuilder.Entity("CallCenterRepository.Models.Project", b =>
                {
                    b.Property<int>("PkProject")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PkProject"));

                    b.Property<int>("CallInterval")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("Closed")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time without time zone");

                    b.Property<int>("FkAdmin")
                        .HasColumnType("integer");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("ProjectStatus")
                        .HasColumnType("boolean");

                    b.Property<string>("ScriptText")
                        .HasColumnType("text");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time without time zone");

                    b.Property<int>("TimeZoneOffset")
                        .HasColumnType("integer");

                    b.HasKey("PkProject");

                    b.HasIndex("FkAdmin");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("CallCenterRepository.Models.ProjectStatus", b =>
                {
                    b.Property<int>("PkProjectStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PkProjectStatus"));

                    b.Property<int?>("FkStatusGroup")
                        .HasColumnType("integer");

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("PkProjectStatus");

                    b.HasIndex("FkStatusGroup");

                    b.ToTable("ProjectStatuses");
                });

            modelBuilder.Entity("CallCenterRepository.Models.ProjectStatusGroup", b =>
                {
                    b.Property<int>("PkStatusGroup")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PkStatusGroup"));

                    b.Property<int>("FkProject")
                        .HasColumnType("integer");

                    b.Property<string>("StatusGroupName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("PkStatusGroup");

                    b.HasIndex("FkProject");

                    b.ToTable("ProjectStatusGroups");
                });

            modelBuilder.Entity("CallCenterRepository.Models.Client", b =>
                {
                    b.HasOne("CallCenterRepository.Models.Project", "Project")
                        .WithMany("Clients")
                        .HasForeignKey("FkProject")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("CallCenterRepository.Models.ClientNote", b =>
                {
                    b.HasOne("CallCenterRepository.Models.Conversation", "Conversation")
                        .WithMany("Notes")
                        .HasForeignKey("FkConversation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conversation");
                });

            modelBuilder.Entity("CallCenterRepository.Models.Conversation", b =>
                {
                    b.HasOne("CallCenterRepository.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("FkClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CallCenterRepository.Models.Operator", "Operator")
                        .WithMany()
                        .HasForeignKey("FkOperator")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CallCenterRepository.Models.Project", "Project")
                        .WithMany("Conversations")
                        .HasForeignKey("FkProject")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Operator");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("CallCenterRepository.Models.ConversationGrade", b =>
                {
                    b.HasOne("CallCenterRepository.Models.Conversation", "Conversation")
                        .WithMany()
                        .HasForeignKey("FkConversation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conversation");
                });

            modelBuilder.Entity("CallCenterRepository.Models.ConversationStatus", b =>
                {
                    b.HasOne("CallCenterRepository.Models.ProjectStatus", "ProjectStatus")
                        .WithMany()
                        .HasForeignKey("FkProjectStatus")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CallCenterRepository.Models.Conversation", "Conversation")
                        .WithMany("SelectedStatuses")
                        .HasForeignKey("FkTalk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conversation");

                    b.Navigation("ProjectStatus");
                });

            modelBuilder.Entity("CallCenterRepository.Models.Operator", b =>
                {
                    b.HasOne("CallCenterRepository.Models.Admin", "Admin")
                        .WithMany()
                        .HasForeignKey("FkAdmin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admin");
                });

            modelBuilder.Entity("CallCenterRepository.Models.OperatorProject", b =>
                {
                    b.HasOne("CallCenterRepository.Models.Operator", "Operator")
                        .WithMany()
                        .HasForeignKey("FkOperator")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CallCenterRepository.Models.Project", "Project")
                        .WithMany("OperatorProjects")
                        .HasForeignKey("FkProject")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Operator");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("CallCenterRepository.Models.Project", b =>
                {
                    b.HasOne("CallCenterRepository.Models.Admin", "Admin")
                        .WithMany()
                        .HasForeignKey("FkAdmin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admin");
                });

            modelBuilder.Entity("CallCenterRepository.Models.ProjectStatus", b =>
                {
                    b.HasOne("CallCenterRepository.Models.ProjectStatusGroup", "StatusGroup")
                        .WithMany("Statuses")
                        .HasForeignKey("FkStatusGroup");

                    b.Navigation("StatusGroup");
                });

            modelBuilder.Entity("CallCenterRepository.Models.ProjectStatusGroup", b =>
                {
                    b.HasOne("CallCenterRepository.Models.Project", "Project")
                        .WithMany("StatusGroups")
                        .HasForeignKey("FkProject")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("CallCenterRepository.Models.Conversation", b =>
                {
                    b.Navigation("Notes");

                    b.Navigation("SelectedStatuses");
                });

            modelBuilder.Entity("CallCenterRepository.Models.Project", b =>
                {
                    b.Navigation("Clients");

                    b.Navigation("Conversations");

                    b.Navigation("OperatorProjects");

                    b.Navigation("StatusGroups");
                });

            modelBuilder.Entity("CallCenterRepository.Models.ProjectStatusGroup", b =>
                {
                    b.Navigation("Statuses");
                });
#pragma warning restore 612, 618
        }
    }
}
